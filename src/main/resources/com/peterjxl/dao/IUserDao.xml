<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.peterjxl.dao.IUserDao">
    
    <resultMap id="userMap" type="com.peterjxl.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id" />
        <!-- 非主键字段的对应 -->
        <result property="userName" column="userName"/>
        <result property="userAddress" column="address"/>
        <result property="userSex" column="sex"/>
        <result property="userBirthday" column="birthday"/>
    </resultMap>
    
    <resultMap id="userAccountMap" type="user">
        <id property="userId" column="id"/>
        <result property="userName" column="userName"/>
        <result property="userAddress" column="address"/>
        <result property="userSex" column="sex"/>
        <result property="userBirthday" column="birthday"/>
        <!-- 配置user对象中account集合的映射 -->
        <collection property="accounts" ofType="account">
            <id property="id" column="aid"/>
            <result property="uid" column="uid"/>
            <result property="money" column="money"/>
        </collection>
    </resultMap>

    <resultMap id="userRoleMap" type="user">
        <id property="userId" column="id"/>
        <result property="userName" column="userName"/>
        <result property="userAddress" column="address"/>
        <result property="userSex" column="sex"/>
        <result property="userBirthday" column="birthday"/>
        <!-- 配置user对象中account集合的映射 -->
        <collection property="roles" ofType="role">
            <id property="roleID" column="rid"/>
            <result property="roleName" column="role_name"/>
            <result property="roleDesc" column="role_desc"/>
        </collection>
    </resultMap>

    <sql id="defaultUser">
        select * from user
    </sql>
    
    <!-- 配置查询所有用户，id要写方法名称-->
    <select id="findAll" resultMap="userRoleMap">
        SELECT u.*, r.id as rid, r.ROLE_NAME, r.ROLE_DESC
        FROM user u
        LEFT JOIN user_role ur on u.ID = ur.UID
        LEFT JOIN role r on r.id = ur.RID
    </select>

    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="com.peterjxl.domain.User">
        <selectKey keyProperty="userId" keyColumn="id" order="AFTER" resultType="int">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values (#{userName}, #{userAddress}, #{userSex}, #{userBirthday})
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.peterjxl.domain.User">
        update user
        set username=#{userName}, address=#{userAddress}, sex=#{userSex}, birthday=#{userBirthday}
        where id=#{userId}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id = #{userId}
    </delete>

    <!-- 根据ID查询用户 -->
    <select id="findById" parameterType="INT" resultMap="userMap">
        select * from user where id = #{uid}
    </select>

    <!-- 根据名称查询用户 -->
    <select id="findByName" parameterType="string"  resultMap="userMap">
        select * from user where username like #{name}
    </select>

    <!-- 获取用户的总记录条数 -->
    <select id="findTotal" resultType="int">
        select count(*) from user
    </select>

    <!-- 根据QueryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.peterjxl.domain.QueryVo" resultType="USER">
        select * from user where username like #{user.userName}
    </select>

    <!-- 根据可有可无的多个参数进行查询-->
    <select id="findUserByCondition"  resultType="USER" resultMap="userMap">
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>

    <!-- 根据QueryVo中的id集合，实现查询用户列表 -->
    <select id="findUserInIds" resultType="USER" resultMap="userMap" parameterType="QueryVo">
        <include refid="defaultUser"/>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>